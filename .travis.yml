env:
  global:
    secure: FoPCwIlEKUUIwpSMGomm+Dfsv/Cp7ITqFVq5u++AAWp6WniX22NkkoPhCnbq3YxXrt0RQhK0P+pe6iJeQNgtm4seYWZO/pWj+frkW52kRWiEgMgKoAWx28vHVvcuqVr5lHAiezMoyrrKrmAJEznO0mTryDc1Ez3fzjSoIoY5r653TZEJNOJ5wU07oTVgGtTkKY9gsHM1s9fNu2ikmKrLQoe8VPJZpkSQPJp5YipghijYQUbeRyHnNMkxWZk34YCRTo2XIRiFBUKfC2efGLPvzGYjwAFYDHQUEKV4lVyg9S6e1BqoFH74vfgF2Vs6DADmWqImwC3RtrADh6wRpxSkADnCv+t3wc3mhuvYX74IDx6H0BFqYvWJwrkmXmnEQonBc/0db/mSiKfz6jp9i7vJl1XEtaYZ3Teic732ziOqUIbm4HjHCBDSqlC4mIlSDJnGAFvVjfZL1W1hbkUPaG1KpmEZ5hiE7mu2kf3DkFjiBdwBSTs5wlgmqmzHvvtAg1P6TdkR2uyIUCCkX4628sWzhfIfTV9XrophJw7jS+PD8dy5tdJclZvIXlw6JbiDPRpF7Vm6orDk/cY5sQ6Sv4+CZd0ml3AaSblR8JkXLCUu21/c2jxJwewYD7MFGNLcLueAK7pycZ9o3YII2zHlfuPRNAWEjS2AjgjCnk52+xhIDW4=

matrix:
  include:
    - language: cpp
      os: linux
      addons:
        apt:
          packages:
            - gfortran

    - language: cpp
      os: osx
      osx_image: xcode10
      env: OSX=10.13
      compiler: clang
    - language: cpp
      os: osx
      osx_image: xcode9.2
      env: OSX=10.12
      compiler: clang
    - language: cpp
      os: osx
      osx_image: xcode8
      env: OSX=10.11
      compiler: clang

    - language: minimal
      dist: bionic
      env: DISTRO=alpine
    - language: minimal
      dist: bionic
      env: DISTRO=archlinux
    - language: minimal
      dist: bionic
      env: DISTRO=centos
    - language: minimal
      dist: bionic
      env: DISTRO=debian
    - language: minimal
      dist: bionic
      env: DISTRO=fedora
    - language: minimal
      dist: bionic
      env: DISTRO=opensuse
    - language: minimal
      dist: bionic
      env: DISTRO=ubuntu

  allow_failures:
    - language: cpp
      os: osx

install: true

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  export PLATFORM=osx$OSX-x86_64-clang`clang -dumpversion`; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; brew install bash gcc; brew link --overwrite gcc; gfortran --version; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ -z "$DISTRO" ]]; then export PLATFORM=linux-x86_64-gcc`gcc -dumpversion`; fi
  - if [[ -z "$DISTRO" ]]; then cd ..; fi
  - if [[ -z "$DISTRO" ]]; then wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew; fi
  - if [[ -z "$DISTRO" ]]; then export PROJECT_URL=https://github.com/$TRAVIS_REPO_SLUG; fi
  - if [[ -z "$DISTRO" ]]; then export PROJECT=`echo $TRAVIS_REPO_SLUG | cut -d "/" -f 2`; fi
  - if [[ -z "$DISTRO" ]]; then bash ./coinbrew fetch $PROJECT_URL:$TRAVIS_BRANCH --no-prompt --skip-update > /dev/null; fi

script:
  - if [[ -z "$DISTRO" ]]; then bash ./coinbrew build $PROJECT --no-prompt --verbosity=4 --test; fi

  - >
    if [[ ! -z "$DISTRO" ]]; then (
    cd .ci &&
    make env_${DISTRO} &&
    make devel_${DISTRO} &&
    make test_${DISTRO} &&
    make install_${DISTRO} &&
    make test_install_${DISTRO} ||
    travis_terminate 1 ); fi


after_script:
  - if [ $TRAVIS_BRANCH = "master" ] &&  [[ -z "$DISTRO" ]]; then export VERSION=master; else export VERSION=`echo $TRAVIS_BRANCH | cut -d "/" -f 2`; fi
  - if [[ -z "$DISTRO" ]]; then export TGZ_FILE=$PROJECT-$VERSION-$PLATFORM.tgz; fi
  - if [[ -z "$DISTRO" ]]; then echo $TGZ_FILE; fi
  - if [[ -z "$DISTRO" ]]; then cp $PROJECT/README.md $PROJECT/LICENSE $PROJECT/$PROJECT/AUTHORS dist; fi
  - if [[ -z "$DISTRO" ]]; then cd dist; fi
  - if [[ -z "$DISTRO" ]]; then tar -czvf $TGZ_FILE lib/* bin/* include/* share/* README.md LICENSE AUTHORS; fi
  - if [[ -z "$DISTRO" ]]; then curl -T $TGZ_FILE -utkralphs:$BINTRAY_API -H "X-Bintray-Publish:1" -H "X-Bintray-Override:1" https://api.bintray.com/content/coin-or/download/$PROJECT/$VERSION/$TGZ_FILE; fi
